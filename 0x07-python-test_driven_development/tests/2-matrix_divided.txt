>>> matrix_divided, matrix = __import__(
...    "2-matrix_divided").matrix_divided, [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided("Davenchy", 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], [], [5, 3]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], ['a'], [3]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
